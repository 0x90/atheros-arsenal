Index: compat-wireless-2011-12-01/drivers/net/wireless/ath/ath9k/debug.c
===================================================================
--- compat-wireless-2011-12-01.orig/drivers/net/wireless/ath/ath9k/debug.c	2012-04-23 18:11:21.162143383 +0200
+++ compat-wireless-2011-12-01/drivers/net/wireless/ath/ath9k/debug.c	2012-04-23 18:11:36.350264265 +0200
@@ -1112,6 +1112,53 @@
 	.llseek = default_llseek,
 };
 
+static ssize_t read_file_bssid_extra(struct file *file, char __user *user_buf,
+                                size_t count, loff_t *ppos)
+{
+	struct ath_softc *sc = file->private_data;
+  struct ath_common *common = ath9k_hw_common(sc->sc_ah);
+	char buf[32];
+	unsigned int len;
+
+	len = sprintf(buf, "%pM\n", common->bssidmask);
+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
+static ssize_t write_file_bssid_extra(struct file *file, const char __user *user_buf,
+			     size_t count, loff_t *ppos)
+{
+	struct ath_softc *sc = file->private_data;
+  struct ath_hw *ah = sc->sc_ah;
+  struct ath_common *common = ath9k_hw_common(ah);
+	char buf[32];
+  u8 macaddr[ETH_ALEN];
+	ssize_t len;
+
+	len = min(count, sizeof(buf) - 1);
+	if (copy_from_user(buf, user_buf, len))
+		return -EFAULT;
+
+	buf[len] = '\0';
+
+  sscanf(buf, "%hhx:%hhx:%hhx:%hhx:%hhx:%hhx", &macaddr[0], &macaddr[1],
+              &macaddr[2], &macaddr[3], &macaddr[4], &macaddr[5]);
+
+  memcpy(common->bssidmask, macaddr, ETH_ALEN);
+	ath_hw_setbssidmask(common);
+
+	return count;
+}
+
+static const struct file_operations fops_bssid_extra = {
+	.read = read_file_bssid_extra,
+	.write = write_file_bssid_extra,
+	.open = ath9k_debugfs_open,
+	.owner = THIS_MODULE,
+	.llseek = default_llseek,
+};
+
+
+
 static ssize_t read_file_regval(struct file *file, char __user *user_buf,
 			     size_t count, loff_t *ppos)
 {
@@ -1764,6 +1811,8 @@
 			    sc->debug.debugfs_phy, sc, &fops_disable_ani);
 	debugfs_create_file("regidx", S_IRUSR | S_IWUSR, sc->debug.debugfs_phy,
 			    sc, &fops_regidx);
+	debugfs_create_file("bssid_extra", S_IRUSR | S_IWUSR, sc->debug.debugfs_phy,
+			    sc, &fops_bssid_extra);
 	debugfs_create_file("regval", S_IRUSR | S_IWUSR, sc->debug.debugfs_phy,
 			    sc, &fops_regval);
 	debugfs_create_bool("ignore_extcca", S_IRUSR | S_IWUSR,
